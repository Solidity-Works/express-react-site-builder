var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
import { jsx as _jsx } from "react/jsx-runtime";
import GrapesJS from 'grapesjs';
import mjml from 'grapesjs-mjml';
import newsletter from 'grapesjs-preset-newsletter';
import webpage from 'grapesjs-preset-webpage';
import React from 'react';
var presets = {
    webpage: webpage,
    newsletter: newsletter,
    mjml: mjml,
};
var Editor = React.forwardRef(function (props, ref) {
    var onInit = props.onInit, id = props.id, blockManager = props.blockManager, styleManager = props.styleManager, storageManager = props.storageManager, width = props.width, height = props.height, propPlugins = props.plugins, presetType = props.presetType, children = props.children, onDestroy = props.onDestroy, extraConfig = props.extraConfig;
    var _a = React.useState(null), editor = _a[0], setEditor = _a[1];
    React.useEffect(function () {
        var editor = GrapesJS.init(__assign({ container: "#" + id, fromElement: true, blockManager: blockManager,
            styleManager: styleManager,
            storageManager: storageManager,
            width: width,
            height: height, plugins: __spreadArray([
                presets[presetType]
            ], propPlugins) }, extraConfig));
        if (typeof onInit === 'function') {
            onInit(editor);
        }
        setEditor(editor);
        return function cleanup() {
            if (editor) {
                if (typeof onDestroy === 'function') {
                    onDestroy(editor);
                }
                GrapesJS.editors = GrapesJS.editors.filter(function (e) { return e !== editor; });
                editor.destroy();
                if (document) {
                    var container = document.getElementById(id);
                    if (container) {
                        container.innerHTML = '';
                    }
                }
            }
        };
    }, [blockManager, height, id, onDestroy, onInit, presetType, propPlugins, storageManager, styleManager, width, extraConfig]);
    React.useImperativeHandle(ref, function () {
        return editor;
    });
    return (_jsx("div", __assign({ id: id }, { children: children }), void 0));
});
Editor.defaultProps = {
    id: 'grapesjs-react-editor',
    presetType: 'newsletter',
    plugins: [],
    blocks: [],
    blockManager: {},
    storageManager: {},
    styleManager: {},
    width: 'auto',
    height: '100vh',
    components: [],
    extraConfig: {},
};
export default Editor;
//# sourceMappingURL=Editor.js.map