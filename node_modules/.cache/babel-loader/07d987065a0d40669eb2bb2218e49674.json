{"ast":null,"code":"import grapesjs from 'grapesjs';\nimport loadComponents from './components';\nimport loadBlocks from './blocks';\nimport loadCommands from './commands';\nimport loadPanels from './panels';\nimport parserHtmlCaseSensitive from './ParserHtmlCaseSensitive';\nimport { ChartPluginRef } from './consts';\nexport default function addChartPlugin() {\n  grapesjs.plugins.add(ChartPluginRef, function (editor) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    editor.TraitManager.addType('pre', {\n      noLabel: true,\n      getInputEl() {\n        const {\n          model\n        } = this;\n        const {\n          text\n        } = model.props();\n        const label = text;\n        const input = `<div type=\"text\" style=\"font-size: 1rem; line-height:30px; margin:10px; word-wrap: break-word; width: 180px;\">${label}</div>`;\n        return input;\n      }\n    });\n    let c = opts;\n    let defaults = {\n      blocks: [ChartPluginRef],\n      blockLabel: 'Charts',\n      blockCategory: 'Extra',\n      defaultStyle: true\n    };\n    console.log(defaults);\n    for (let name in defaults) {\n      if (!(name in c)) c[name] = defaults[name];\n    }\n    loadComponents(editor, c);\n    loadBlocks(editor, c);\n    loadCommands(editor, c);\n    loadPanels(editor, c);\n    const em = editor.getModel();\n    const emConf = em.get('Config');\n    emConf.textTags = ['br', 'b', 'i', 'u', 'a', 'ul', 'ol'];\n    em.get('Parser').parserHtml = parserHtmlCaseSensitive(emConf);\n    em.get('Parser').parseHtml = str => {\n      const pHtml = em.get('Parser').parserHtml;\n      pHtml.compTypes = em.get('DomComponents').getTypes();\n      let res = pHtml.parse(str, em.get('Parser').parserCss);\n      return res;\n    };\n    editor.on(\"load\", () => {\n      const openBl = editor.Panels.getButton('views', 'open-blocks');\n      openBl && openBl.set('active', 1);\n    });\n  });\n}","map":{"version":3,"names":["grapesjs","loadComponents","loadBlocks","loadCommands","loadPanels","parserHtmlCaseSensitive","ChartPluginRef","addChartPlugin","plugins","add","editor","opts","arguments","length","undefined","TraitManager","addType","noLabel","getInputEl","model","text","props","label","input","c","defaults","blocks","blockLabel","blockCategory","defaultStyle","console","log","name","em","getModel","emConf","get","textTags","parserHtml","parseHtml","str","pHtml","compTypes","getTypes","res","parse","parserCss","on","openBl","Panels","getButton","set"],"sources":["D:/CMK/2023_5/WebsiteBuiderTask/modify/grapesJs/src/Chart/index.js"],"sourcesContent":["import grapesjs from 'grapesjs';\r\nimport loadComponents from './components'; \r\nimport loadBlocks from './blocks';\r\nimport loadCommands from './commands';\r\nimport loadPanels from './panels';\r\nimport parserHtmlCaseSensitive from './ParserHtmlCaseSensitive';\r\n\r\nimport {\r\n    ChartPluginRef\r\n} from './consts';\r\n\r\nexport default function addChartPlugin() {\r\n    grapesjs.plugins.add(ChartPluginRef, (editor, opts = {}) => {\r\n\r\n        \r\n        editor.TraitManager.addType('pre', {\r\n                                                                \r\n            noLabel: true,\r\n            \r\n            getInputEl() {\r\n                const { model} = this;\r\n                const {text} = model.props();\r\n                const label = text;\r\n                const input = `<div type=\"text\" style=\"font-size: 1rem; line-height:30px; margin:10px; word-wrap: break-word; width: 180px;\">${label}</div>`;\r\n                return input;\r\n            }\r\n        }\r\n                                                            \r\n\t\t) \r\n\r\n\r\n\r\n        let c = opts;\r\n \r\n        let defaults = {\r\n            blocks: [ChartPluginRef],\r\n\r\n            blockLabel: 'Charts',\r\n\r\n            blockCategory: 'Extra',\r\n\r\n            defaultStyle: true,\r\n\r\n        };\r\n        console.log(defaults)\r\n\r\n        for (let name in defaults) {\r\n            if (!(name in c))\r\n                c[name] = defaults[name];\r\n        }\r\n\r\n        loadComponents(editor, c);\r\n\r\n        loadBlocks(editor, c);\r\n\r\n        loadCommands(editor, c);\r\n\r\n        loadPanels(editor, c); \r\n\r\n        const em = editor.getModel();\r\n        const emConf = em.get('Config');\r\n        emConf.textTags = ['br', 'b', 'i', 'u', 'a', 'ul', 'ol'];\r\n        em.get('Parser').parserHtml = parserHtmlCaseSensitive(emConf);\r\n        em.get('Parser').parseHtml = (str) => {\r\n            const pHtml = em.get('Parser').parserHtml;\r\n            pHtml.compTypes = em.get('DomComponents').getTypes();\r\n            let res = pHtml.parse(str, em.get('Parser').parserCss);\r\n            return res;\r\n        };\r\n\r\n        editor.on(\"load\", () => {\r\n            const openBl = editor.Panels.getButton('views', 'open-blocks');\r\n            openBl && openBl.set('active', 1);\r\n        });\r\n\r\n    });\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,UAAU;AAC/B,OAAOC,cAAc,MAAM,cAAc;AACzC,OAAOC,UAAU,MAAM,UAAU;AACjC,OAAOC,YAAY,MAAM,YAAY;AACrC,OAAOC,UAAU,MAAM,UAAU;AACjC,OAAOC,uBAAuB,MAAM,2BAA2B;AAE/D,SACIC,cAAc,QACX,UAAU;AAEjB,eAAe,SAASC,cAAcA,CAAA,EAAG;EACrCP,QAAQ,CAACQ,OAAO,CAACC,GAAG,CAACH,cAAc,EAAE,UAACI,MAAM,EAAgB;IAAA,IAAdC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IAGnDF,MAAM,CAACK,YAAY,CAACC,OAAO,CAAC,KAAK,EAAE;MAE/BC,OAAO,EAAE,IAAI;MAEbC,UAAUA,CAAA,EAAG;QACT,MAAM;UAAEC;QAAK,CAAC,GAAG,IAAI;QACrB,MAAM;UAACC;QAAI,CAAC,GAAGD,KAAK,CAACE,KAAK,CAAC,CAAC;QAC5B,MAAMC,KAAK,GAAGF,IAAI;QAClB,MAAMG,KAAK,GAAI,iHAAgHD,KAAM,QAAO;QAC5I,OAAOC,KAAK;MAChB;IACJ,CAEN,CAAC;IAIK,IAAIC,CAAC,GAAGb,IAAI;IAEZ,IAAIc,QAAQ,GAAG;MACXC,MAAM,EAAE,CAACpB,cAAc,CAAC;MAExBqB,UAAU,EAAE,QAAQ;MAEpBC,aAAa,EAAE,OAAO;MAEtBC,YAAY,EAAE;IAElB,CAAC;IACDC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;IAErB,KAAK,IAAIO,IAAI,IAAIP,QAAQ,EAAE;MACvB,IAAI,EAAEO,IAAI,IAAIR,CAAC,CAAC,EACZA,CAAC,CAACQ,IAAI,CAAC,GAAGP,QAAQ,CAACO,IAAI,CAAC;IAChC;IAEA/B,cAAc,CAACS,MAAM,EAAEc,CAAC,CAAC;IAEzBtB,UAAU,CAACQ,MAAM,EAAEc,CAAC,CAAC;IAErBrB,YAAY,CAACO,MAAM,EAAEc,CAAC,CAAC;IAEvBpB,UAAU,CAACM,MAAM,EAAEc,CAAC,CAAC;IAErB,MAAMS,EAAE,GAAGvB,MAAM,CAACwB,QAAQ,CAAC,CAAC;IAC5B,MAAMC,MAAM,GAAGF,EAAE,CAACG,GAAG,CAAC,QAAQ,CAAC;IAC/BD,MAAM,CAACE,QAAQ,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IACxDJ,EAAE,CAACG,GAAG,CAAC,QAAQ,CAAC,CAACE,UAAU,GAAGjC,uBAAuB,CAAC8B,MAAM,CAAC;IAC7DF,EAAE,CAACG,GAAG,CAAC,QAAQ,CAAC,CAACG,SAAS,GAAIC,GAAG,IAAK;MAClC,MAAMC,KAAK,GAAGR,EAAE,CAACG,GAAG,CAAC,QAAQ,CAAC,CAACE,UAAU;MACzCG,KAAK,CAACC,SAAS,GAAGT,EAAE,CAACG,GAAG,CAAC,eAAe,CAAC,CAACO,QAAQ,CAAC,CAAC;MACpD,IAAIC,GAAG,GAAGH,KAAK,CAACI,KAAK,CAACL,GAAG,EAAEP,EAAE,CAACG,GAAG,CAAC,QAAQ,CAAC,CAACU,SAAS,CAAC;MACtD,OAAOF,GAAG;IACd,CAAC;IAEDlC,MAAM,CAACqC,EAAE,CAAC,MAAM,EAAE,MAAM;MACpB,MAAMC,MAAM,GAAGtC,MAAM,CAACuC,MAAM,CAACC,SAAS,CAAC,OAAO,EAAE,aAAa,CAAC;MAC9DF,MAAM,IAAIA,MAAM,CAACG,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrC,CAAC,CAAC;EAEN,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module"}