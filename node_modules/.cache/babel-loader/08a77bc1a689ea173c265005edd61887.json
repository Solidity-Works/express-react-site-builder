{"ast":null,"code":"import grapesjs from 'grapesjs';\nimport pluginBlocks from 'grapesjs-blocks-basic';\nimport pluginNavbar from 'grapesjs-navbar';\nimport pluginCountdown from 'grapesjs-component-countdown';\nimport pluginForms from 'grapesjs-plugin-forms';\nimport pluginExport from 'grapesjs-plugin-export';\nimport pluginAviary from 'grapesjs-aviary';\nimport pluginFilestack from 'grapesjs-plugin-filestack';\nimport commands from './commands';\nimport blocks from './blocks';\nimport components from './components';\nimport panels from './panels';\nimport styles from './styles';\nimport titles from './titles';\nexport default grapesjs.plugins.add('gjs-preset-webpage', function (editor) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var config = opts;\n  var defaults = {\n    // Which blocks to add\n    blocks: ['link-block', 'quote', 'text-basic', 'text', 'link', 'image', 'video', 'map'],\n    // Modal import title\n    modalImportTitle: 'Import',\n    // Modal import button text\n    modalImportButton: 'Import',\n    // Import description inside import modal\n    modalImportLabel: '',\n    // Default content to setup on import model open.\n    // Could also be a function with a dynamic content return (must be a string)\n    // eg. modalImportContent: editor => editor.getHtml(),\n    modalImportContent: '',\n    // Code viewer (eg. CodeMirror) options\n    importViewerOptions: {},\n    // Confirm text before cleaning the canvas\n    textCleanCanvas: 'Are you sure to clean the canvas?',\n    // Show the Style Manager on component change\n    showStylesOnChange: 1,\n    // Text for General sector in Style Manager\n    textGeneral: 'General',\n    // Text for Layout sector in Style Manager\n    textLayout: 'Layout',\n    // Text for Typography sector in Style Manager\n    textTypography: 'Typography',\n    // Text for Decorations sector in Style Manager\n    textDecorations: 'Decorations',\n    // Text for Extra sector in Style Manager\n    textExtra: 'Extra',\n    // Use custom set of sectors for the Style Manager\n    customStyleManager: [],\n    // `grapesjs-blocks-basic` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    blocksBasicOpts: {},\n    // `grapesjs-navbar` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    navbarOpts: {},\n    // `grapesjs-component-countdown` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    countdownOpts: {},\n    // `grapesjs-plugin-forms` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    formsOpts: {},\n    // `grapesjs-plugin-export` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    exportOpts: {},\n    // `grapesjs-aviary` plugin options, disabled by default\n    // Aviary library should be included manually\n    // By setting this option to `false` will avoid loading the plugin\n    aviaryOpts: 0,\n    // `grapesjs-plugin-filestack` plugin options, disabled by default\n    // Filestack library should be included manually\n    // By setting this option to `false` will avoid loading the plugin\n    filestackOpts: 0\n  };\n\n  // Load defaults\n  for (var name in defaults) {\n    if (!(name in config)) config[name] = defaults[name];\n  }\n  var blocksBasicOpts = config.blocksBasicOpts,\n    navbarOpts = config.navbarOpts,\n    countdownOpts = config.countdownOpts,\n    formsOpts = config.formsOpts,\n    exportOpts = config.exportOpts,\n    aviaryOpts = config.aviaryOpts,\n    filestackOpts = config.filestackOpts;\n\n  // Load plugins\n  blocksBasicOpts && pluginBlocks(editor, blocksBasicOpts);\n  navbarOpts && pluginNavbar(editor, navbarOpts);\n  countdownOpts && pluginCountdown(editor, countdownOpts);\n  formsOpts && pluginForms(editor, formsOpts);\n  exportOpts && pluginExport(editor, exportOpts);\n  aviaryOpts && pluginAviary(editor, aviaryOpts);\n  filestackOpts && pluginFilestack(editor, filestackOpts);\n\n  // Load components\n  components(editor, config);\n\n  // Load blocks\n  blocks(editor, config);\n\n  // Load commands\n  commands(editor, config);\n\n  // Load panels\n  panels(editor, config);\n\n  // Load styles\n  styles(editor, config);\n\n  // Load titles\n  titles(editor, config);\n});","map":{"version":3,"names":["grapesjs","pluginBlocks","pluginNavbar","pluginCountdown","pluginForms","pluginExport","pluginAviary","pluginFilestack","commands","blocks","components","panels","styles","titles","plugins","add","editor","opts","arguments","length","undefined","config","defaults","modalImportTitle","modalImportButton","modalImportLabel","modalImportContent","importViewerOptions","textCleanCanvas","showStylesOnChange","textGeneral","textLayout","textTypography","textDecorations","textExtra","customStyleManager","blocksBasicOpts","navbarOpts","countdownOpts","formsOpts","exportOpts","aviaryOpts","filestackOpts","name"],"sources":["D:/Dapp/Clients/site-builder/grapesJs/node_modules/grapesjs-preset-webpage/src/index.js"],"sourcesContent":["import grapesjs from 'grapesjs';\nimport pluginBlocks from 'grapesjs-blocks-basic';\nimport pluginNavbar from 'grapesjs-navbar';\nimport pluginCountdown from 'grapesjs-component-countdown';\nimport pluginForms from 'grapesjs-plugin-forms';\nimport pluginExport from 'grapesjs-plugin-export';\nimport pluginAviary from 'grapesjs-aviary';\nimport pluginFilestack from 'grapesjs-plugin-filestack';\n\nimport commands from './commands';\nimport blocks from './blocks';\nimport components from './components';\nimport panels from './panels';\nimport styles from './styles';\nimport titles from './titles';\n\nexport default grapesjs.plugins.add('gjs-preset-webpage', (editor, opts = {}) => {\n  let config = opts;\n\n  let defaults = {\n    // Which blocks to add\n    blocks: ['link-block', 'quote', 'text-basic', 'text', 'link', 'image', 'video', 'map'],\n\n    // Modal import title\n    modalImportTitle: 'Import',\n\n    // Modal import button text\n    modalImportButton: 'Import',\n\n    // Import description inside import modal\n    modalImportLabel: '',\n\n    // Default content to setup on import model open.\n    // Could also be a function with a dynamic content return (must be a string)\n    // eg. modalImportContent: editor => editor.getHtml(),\n    modalImportContent: '',\n\n    // Code viewer (eg. CodeMirror) options\n    importViewerOptions: {},\n\n    // Confirm text before cleaning the canvas\n    textCleanCanvas: 'Are you sure to clean the canvas?',\n\n    // Show the Style Manager on component change\n    showStylesOnChange: 1,\n\n    // Text for General sector in Style Manager\n    textGeneral: 'General',\n\n    // Text for Layout sector in Style Manager\n    textLayout: 'Layout',\n\n    // Text for Typography sector in Style Manager\n    textTypography: 'Typography',\n\n    // Text for Decorations sector in Style Manager\n    textDecorations: 'Decorations',\n\n    // Text for Extra sector in Style Manager\n    textExtra: 'Extra',\n\n    // Use custom set of sectors for the Style Manager\n    customStyleManager: [],\n\n    // `grapesjs-blocks-basic` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    blocksBasicOpts: {},\n\n    // `grapesjs-navbar` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    navbarOpts: {},\n\n    // `grapesjs-component-countdown` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    countdownOpts: {},\n\n    // `grapesjs-plugin-forms` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    formsOpts: {},\n\n    // `grapesjs-plugin-export` plugin options\n    // By setting this option to `false` will avoid loading the plugin\n    exportOpts: {},\n\n    // `grapesjs-aviary` plugin options, disabled by default\n    // Aviary library should be included manually\n    // By setting this option to `false` will avoid loading the plugin\n    aviaryOpts: 0,\n\n    // `grapesjs-plugin-filestack` plugin options, disabled by default\n    // Filestack library should be included manually\n    // By setting this option to `false` will avoid loading the plugin\n    filestackOpts: 0,\n  };\n\n  // Load defaults\n  for (let name in defaults) {\n    if (!(name in config))\n      config[name] = defaults[name];\n  }\n\n  const {\n    blocksBasicOpts,\n    navbarOpts,\n    countdownOpts,\n    formsOpts,\n    exportOpts,\n    aviaryOpts,\n    filestackOpts\n  } = config;\n\n  // Load plugins\n  blocksBasicOpts && pluginBlocks(editor, blocksBasicOpts);\n  navbarOpts && pluginNavbar(editor, navbarOpts);\n  countdownOpts && pluginCountdown(editor, countdownOpts);\n  formsOpts && pluginForms(editor, formsOpts);\n  exportOpts && pluginExport(editor, exportOpts);\n  aviaryOpts && pluginAviary(editor, aviaryOpts);\n  filestackOpts && pluginFilestack(editor, filestackOpts);\n\n  // Load components\n  components(editor, config);\n\n  // Load blocks\n  blocks(editor, config);\n\n  // Load commands\n  commands(editor, config);\n\n  // Load panels\n  panels(editor, config);\n\n  // Load styles\n  styles(editor, config);\n\n  // Load titles\n  titles(editor, config);\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}